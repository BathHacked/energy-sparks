
<h1>Dashboard</h1>
<%= render 'nav' %>

<div id="chart_0" style="min-width: 310px; height: 400px; margin: 0 auto"></div>
<div id="chart_1" style="min-width: 310px; height: 400px; margin: 0 auto"></div>
<div id="chart_2" style="min-width: 310px; height: 400px; margin: 0 auto"></div>
<div id="chart_3" style="min-width: 310px; height: 400px; margin: 0 auto"></div>
<div id="chart_4" style="min-width: 310px; height: 400px; margin: 0 auto"></div>
<div id="chart_5" style="min-width: 310px; height: 400px; margin: 0 auto"></div>
<div id="chart_6" style="min-width: 310px; height: 400px; margin: 0 auto"></div>
<div id="chart_7" style="min-width: 310px; height: 400px; margin: 0 auto"></div>
<div id="chart_8" style="min-width: 310px; height: 400px; margin: 0 auto"></div>
<div id="chart_9" style="min-width: 310px; height: 400px; margin: 0 auto"></div>
<div id="chart_10" style="min-width: 310px; height: 400px; margin: 0 auto"></div>
<div id="chart_11" style="min-width: 310px; height: 400px; margin: 0 auto"></div>
<div id="chart_12" style="min-width: 310px; height: 400px; margin: 0 auto"></div>
<div id="chart_13" style="min-width: 310px; height: 400px; margin: 0 auto"></div>
<div id="chart_14" style="min-width: 310px; height: 400px; margin: 0 auto"></div>
<div id="chart_15" style="min-width: 310px; height: 400px; margin: 0 auto"></div>
<div id="chart_16" style="min-width: 310px; height: 400px; margin: 0 auto"></div>
<div id="chart_17" style="min-width: 310px; height: 400px; margin: 0 auto"></div>
<div id="chart_18" style="min-width: 310px; height: 400px; margin: 0 auto"></div>

<script>

var commonOptions = {
  title: {
    text: "Loading data..."
  },
  xAxis: {},
  yAxis: [{
    min: 0,
    title: {
      text: 'Pounds'
    },
    stackLabels: {
      style: {
        fontWeight: 'bold',
        color: '#232b49'
      }
    }
  }, {
    min: 0,
    title: {
      text: 'Â°C'
    },
    stackLabels: {
      enabled: true,
      style: {
        fontWeight: 'bold',
        color: '#232b49'
      }
    },
    opposite: true
  }],
  legend: {
    align: 'right',
    x: -60,
    verticalAlign: 'top',
    y: 25,
    floating: false,
    backgroundColor: 'white',
    borderColor: '#232b49',
    borderWidth: 1,
    shadow: false
  },
  tooltip: {
    headerFormat: '<b>{point.x}</b><br/>',
    pointFormat: '{series.name}: {point.y}<br/>Total: {point.stackTotal}'
  },
  plotOptions: {
    column: {
      dataLabels: {
        color: '#232b49'
      }
    },
     pie: {
        allowPointSelect: true,
        cursor: 'pointer',
        dataLabels: {
            enabled: false
        },
        showInLegend: true
    }
  },
}
var chart_0 = Highcharts.chart('chart_0', commonOptions );
var chart_1 = Highcharts.chart('chart_1', commonOptions );
var chart_2 = Highcharts.chart('chart_2', commonOptions );
var chart_3 = Highcharts.chart('chart_3', commonOptions );
var chart_4 = Highcharts.chart('chart_4', commonOptions );
var chart_5 = Highcharts.chart('chart_5', commonOptions );
var chart_6 = Highcharts.chart('chart_6', commonOptions );
var chart_7 = Highcharts.chart('chart_7', commonOptions );
var chart_8 = Highcharts.chart('chart_8', commonOptions );
var chart_9 = Highcharts.chart('chart_9', commonOptions );
var chart_10 = Highcharts.chart('chart_10', commonOptions );
var chart_11 = Highcharts.chart('chart_11', commonOptions );
var chart_12 = Highcharts.chart('chart_12', commonOptions );
var chart_13 = Highcharts.chart('chart_13', commonOptions );
var chart_14 = Highcharts.chart('chart_14', commonOptions );
var chart_15 = Highcharts.chart('chart_15', commonOptions );
var chart_16 = Highcharts.chart('chart_16', commonOptions );
var chart_17 = Highcharts.chart('chart_17', commonOptions );
var chart_18 = Highcharts.chart('chart_18', commonOptions );

function updateData(c, d) {
  console.log(d);
  if (d.data !== null) {
    // console.log(d.title);
    // console.log(d.data.chart1_type);
    c.setTitle({ text: d.title});
    if (d.data.chart1_type == 'bar' || d.data.chart1_type == 'column' || d.data.chart1_type == 'line') {

      x_axis = d.data.x_axis
      c.xAxis[0].setCategories(x_axis);

      if (d.data.chart1_type == 'bar') {
        c.update({ chart: { inverted: true }});
      }

      if (d.chart_type != 'electricity_by_month_acyear_0_1') {
        c.update({  plotOptions: { column: { stacking: 'normal'}}});
      }

      if (d.data.chart1_type == 'line') {
        c.update({ yAxis: [{ min: -1000,  title: { text: 'kWh' }}]});
      }

      seriesData = d.series_data;
      Object.keys(seriesData).forEach(function (key) {
        c.addSeries(seriesData[key]);
      });

    } else if (d.data.chart1_type == 'pie') {
      c.addSeries(d.series_data);
      c.update({chart: {
        plotBackgroundColor: null,
        plotBorderWidth: null,
        plotShadow: false,
        type: 'pie'
      }});
    }
  } else {
    console.log('d.data is null');
  }
}

$(document).ready(function() {
 $.ajax({
    url: 'chart_data.json',
    type: 'GET',
    async: true,
    dataType: "json",
    success: function (returnedData) {
      updateData(chart_0, returnedData.charts[0]);
      updateData(chart_1, returnedData.charts[1]);
      updateData(chart_2, returnedData.charts[2]);
      updateData(chart_3, returnedData.charts[3]);
      updateData(chart_4, returnedData.charts[4]);
      updateData(chart_5, returnedData.charts[5]);
      updateData(chart_6, returnedData.charts[6]);
      updateData(chart_7, returnedData.charts[7]);
      updateData(chart_8, returnedData.charts[8]);
      updateData(chart_9, returnedData.charts[9]);
      updateData(chart_10, returnedData.charts[10]);
      updateData(chart_11, returnedData.charts[11]);
      updateData(chart_12, returnedData.charts[12]);
      updateData(chart_13, returnedData.charts[13]);
      updateData(chart_14, returnedData.charts[14]);
      updateData(chart_15, returnedData.charts[15]);
      updateData(chart_16, returnedData.charts[16]);
      updateData(chart_17, returnedData.charts[17]);
      updateData(chart_18, returnedData.charts[18]);
    }
  });
 });
</script>
