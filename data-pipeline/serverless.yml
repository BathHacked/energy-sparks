# For full config options, check the docs:
#    docs.serverless.com

service: data-pipeline

custom:
  currentStage: ${opt:stage, 'development'}
  buckets:
    inbox_bucket: data-pipeline-inbox-${self:custom.currentStage}
    process_bucket: data-pipeline-process-${self:custom.currentStage}
    compressed_bucket: data-pipeline-uncompressed-${self:custom.currentStage}
    amr_data_bucket: data-pipeline-amr-data-${self:custom.currentStage}
    unprocessable_bucket: data-pipeline-unprocessable-${self:custom.currentStage}


provider:
  name: aws
  runtime: ruby2.5
  region: eu-west-1
  profile: serverless
  stage: ${opt:stage, 'development'}
  environment:
    INBOX_BUCKET: ${self:custom.buckets.inbox_bucket}
    PROCESS_BUCKET: ${self:custom.buckets.process_bucket}
    COMPRESSED_BUCKET: ${self:custom.buckets.compressed_bucket}
    AMR_DATA_BUCKET: ${self:custom.buckets.amr_data_bucket}
    UNPROCESSABLE_BUCKET: ${self:custom.buckets.unprocessable_bucket}
  iamRoleStatements:
    - Effect: "Allow"
      Action:
        - "s3:*"
      Resource:
        - { "Fn::Join" : ["", ["arn:aws:s3:::", { "Ref" : "ServerlessDeploymentBucket" } ]]}
        - "arn:aws:s3:::${self:custom.buckets.inbox_bucket}/*"
        - "arn:aws:s3:::${self:custom.buckets.process_bucket}/*"
        - "arn:aws:s3:::${self:custom.buckets.compressed_bucket}/*"
        - "arn:aws:s3:::${self:custom.buckets.amr_data_bucket}/*"
        - "arn:aws:s3:::${self:custom.buckets.unprocessable_bucket}/*"

package:
  exclude:
    - .rspec
    - Gemfile
    - Gemfile.lock
    - spec/**

functions:
  unpack-attachments:
    handler: handlers/unpack_attachments.DataPipeline::Handlers::UnpackAttachments.process
    events:
      - s3: ${self:provider.environment.INBOX_BUCKET}
  process-file:
    handler: handlers/process_file.DataPipeline::Handlers::ProcessFile.process
    events:
      - s3: ${self:provider.environment.PROCESS_BUCKET}
  uncompress:
    handler: handlers/uncompress_file.DataPipeline::Handlers::UncompressFile.process
    events:
      - s3: ${self:provider.environment.COMPRESSED_BUCKET}

resources:
  Resources:
    S3BucketAmrData:
      Type: AWS::S3::Bucket
      Properties:
        BucketName: ${self:provider.environment.AMR_DATA_BUCKET}
    S3BucketUnprocessable:
      Type: AWS::S3::Bucket
      Properties:
        BucketName: ${self:provider.environment.UNPROCESSABLE_BUCKET}
